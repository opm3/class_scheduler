<?php

/**
 * Implements hook_menu().
 */
function class_scheduler_menu() {
  $items = [];

  $items['class'] = [
    'title' => t('Class Scheduler'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['class_scheduler_course_form'],
    'access callback' => TRUE,
  ];

  return $items;
}

function _get_course_subject() {
  // drupal_map_assoc() just makes an array('String' => 'String'...).
  return drupal_map_assoc(
    array(
      t('Math'),
      t('Science'),
      t('Art'),
      t('Language Arts'),
    )
  );
}

function _get_course_topic($key = '') {
  $course_info = array(
    t('Math') => drupal_map_assoc(
      array(
        t('Algebra'),
        t('Trigonometry'),
        t('Calculus'),
      )
    ),
    t('Science') => drupal_map_assoc(
      array(
        t('Physics'),
        t('Chemistry'),
        t('Biology'),
      )
    ),
    t('Art') => drupal_map_assoc(
      array(
        t('Art History'),
        t('Painting'),
        t('Drawing'),
      )
    ),
    t('Language Arts') => drupal_map_assoc(
      array(
        t('Literature'),
        t('Grammar'),
        t('Writing'),
      )
    ),
  );
  if (isset($course_info[$key])) {
    return $course_info[$key];
  }
  else {
    return array();
  }
}

function _get_course_timeslot($key = '') {
  $course_info = array(
    t('Algebra') => drupal_map_assoc(
      array(
        t('8:00am'),
        t('11:00am'),
      )
    ),
    t('Trigonometry') => drupal_map_assoc(
      array(
        t('9:00am'),
        t('12:00pm'),
      )
    ),
    t('Calculus') => drupal_map_assoc(
      array(
        t('10:00am'),
        t('3:00pm'),
      )
    ),
    t('Physics') => drupal_map_assoc(
      array(
        t('10:00am'),
        t('3:00pm'),
      )
    ),
    t('Chemistry') => drupal_map_assoc(
      array(
        t('9:00am'),
        t('1:00pm'),
      )
    ),
    t('Biology') => drupal_map_assoc(
      array(
        t('8:00am'),
        t('10:00am'),
      )
    ),
    t('Art History') => drupal_map_assoc(
      array(
        t('11:00am'),
      )
    ),
    t('Painting') => drupal_map_assoc(
      array(
        t('2:00pm'),
      )
    ),
    t('Drawing') => drupal_map_assoc(
      array(
        t('8:00am'),
        t('5:00pm'),
      )
    ),
    t('Literature') => drupal_map_assoc(
      array(
        t('8:30am'),
        t('11:45am'),
      )
    ),
    t('Grammar') => drupal_map_assoc(
      array(
        t('8:00am'),
        t('9:00am'),
        t('10:00am'),
        t('11:00am'),
        t('1:00pm'),
      )
    ),
    t('Writing') => drupal_map_assoc(
      array(
        t('8:00am'),
        t('11:00am'),
      )
    ),
  );
  if (isset($course_info[$key])) {
    return $course_info[$key];
  }
  else {
    return array();
  }
}

/**
 * Page callback for /class.
 */
function class_scheduler_course_form($form, &$form_state) {
  $username = variable_get('username', null);
  if (isset($username)) {
    $courses = db_query('SELECT * FROM class_scheduler WHERE username LIKE \'%' . $username . '%\' ORDER BY STR_TO_DATE(class_timeslot, \'%h.%i%p\') DESC')->fetchAll();
    $schedule = create_schedule_table($courses);
  } else {
    $schedule = '';
  }
  $options_first = _get_course_subject();
  $selected = isset($form_state['values']['class_subject']) ? $form_state['values']['class_subject'] : key($options_first);
  $selected_second = isset($form_state['values']['class_topic']) ? $form_state['values']['class_topic'] : key($options_first);

  $form['username'] = [
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#required' => TRUE,
    '#default_value' => variable_get('username', ''),
  ];
  $form['email'] = [
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#required' => TRUE,
    '#default_value' => variable_get('email', ''),
  ];
  $form['student_id'] = [
    '#type' => 'textfield',
    '#title' => t('Student ID'),
    '#required' => TRUE,
    '#default_value' => variable_get('student_id', ''),
  ];

  $form['class_subject'] = [
    '#type' => 'select',
    '#title' => t('Class Subject'),
    '#options' => $options_first,
    '#default_value' => $selected,
    '#description' => t('Choose a class subject.'),
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'ajax_class_scheduler_callback',
      'wrapper' => 'dropdown-second-replace',
    ),
  ];
  $form['class_topic'] = [
    '#type' => 'select',
    '#title' => t('Class Topic'),
    '#description' => t('Choose a class topic.'),
    '#required' => TRUE,
    '#prefix' => '<div id="dropdown-second-replace">',
    '#suffix' => '</div>',
    '#options' => _get_course_topic($selected),
    '#ajax' => array(
      'callback' => 'ajax_class_scheduler_callback_timeslot',
      'wrapper' => 'dropdown-third-replace',
    ),
  ];
  // If class subject is N then display Y.
  $form['class_timeslot'] = [
    '#type' => 'select',
    '#title' => t('Class Timeslot'),
    '#options' => _get_course_timeslot($selected_second),
    '#description' => t('Choose a class timeslot.'),
    '#required' => TRUE,
    '#prefix' => '<div id="dropdown-third-replace">',
    '#suffix' => '</div>',
  ];
  /*
  // Not sure why we'd need two sets of class subjects?
  $class_subjects_conditional = [
    'subjects' => t('Subjects'),
  ];
  $form['class_subject_conditional'] = [
    '#type' => 'select',
    '#title' => t('Class Subject'),
    '#options' => $class_subjects_conditional,
    '#description' => t('Choose a class subject.'),
    //'#required' => TRUE,
  ];
   */
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => t('Add Class'),
  ];
  $form['schedule_output'] = [
    '#type' => 'markup',
    '#markup' => $schedule,
  ];

  return $form;
}

function ajax_class_scheduler_callback($form, $form_state) {
  return $form['class_topic'];
}

function ajax_class_scheduler_callback_timeslot($form, $form_state) {
  return $form['class_timeslot'];
}

function class_scheduler_page_alter(&$page) {

}

/**
 * Form validation for class schedule form.
 */
function class_scheduler_course_form_validate($form, &$form_state) {
  $timeslots = db_query('SELECT username, class_timeslot FROM class_scheduler')->fetchAll();
  if (!valid_email_address($form_state['values']['email'])) {
    form_set_error('email', t('Not a valid email address.'));
  }
  if (!preg_match('"^[a-zA-Z0-9]*$"', $form_state['values']['username'])) {
    form_set_error('username', t('Usernames can only contain letters and numbers (alphanumeric).'));
  }
  // If that timeslot is already in use for that username, throw error.
  foreach ($timeslots as $timeslot) {
    if ($timeslot->username == $form_state['values']['username'] && $timeslot->class_timeslot == $form_state['values']['class_timeslot']) {
      form_set_error('class_timeslot', t('You have already selected a class for that time.'));
    }
  }
};

/**
 * Custom submit handler.
 */
function class_scheduler_course_form_submit($form, &$form_state) {
  $val = $form_state['values'];

  db_insert('class_scheduler') // Table name no longer needs {}
    ->fields(array(
      'username' => check_plain($val['username']),
      'class_timeslot' => check_plain($val['class_timeslot']),
      'class_subject' => check_plain($val['class_subject']),
      'class_topic' => check_plain($val['class_topic']),
    ))
    ->execute();

  variable_set('username', check_plain($val['username']));
  variable_set('email', check_plain($val['email']));
  variable_set('student_id', check_plain($val['student_id']));

  drupal_set_message(t('Class has been successfully added to your schedule.'));
}

function create_schedule_table($courses) {
  $output = '';
  $username = variable_get('username', '');
  $email = variable_get('email', '');
  $student_id = variable_get('student_id', '');

  $output .= '<br><br>';
  $output .= '<h2>Username: <strong>' . $username  . '</strong><br>';
  $output .= 'Email: <strong>' . $email  . '</strong><br>';
  $output .= 'Student ID: <strong>' . $student_id . '</strong></h2>';
  $output .= '<table>';

  foreach ($courses as $course) {
    $output .= '<tr><td>' . $course->class_subject . '</td>';
    $output .= '<td>' . $course->class_topic . '</td>';
    $output .= '<td>' . $course->class_timeslot . '</td></tr>';
  }

  $output .= '</table>';

  return $output;
}
